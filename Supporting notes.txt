Creating QR Code with Python
qrcode
pillow

image = qrcode.make(url)
image.save(qr.png)


Create model with following columns
category, name, description, price

items(models.Model)
meal charfield 1000 unique=True
description charfield 2000
price DecimalField max_digits 10 decimal_places=2

mealtype = charfield 200 choices FOOD_TYPE
RFOOD_TYPE = ((name, Name),(Name2, Name2))
starter, salads, main dishes, desserts

django.contrib.auth.models import User
ched = ForiegnKey(User, on_delete=models.PROTECT)  ## CASCADE delets all the content by this user, to keep set to PROTECT, or SET_NULL to just remove the user to null


status = IntegerField(choices=STATUS, default=1)
STATUS = ((0, "Unavailable"),(1, "Available"))

date_created = DateTimeField(auto_now_add=True)
date_updated = DateTimeField(auto_now=True)


def __str__
return self.mean


makemigrations
migrate




Class Based views instead of function based views
class based have less code

django.views generic
MenuList(generic.listview)
MenuDetail(generic.DetailView)

queryset = menu.objects.order_by("column")  ## connect model to the view
template_name = html file name  ## connect view to the html

model = menu
template_name = "html file name"

create templates directory with html files

create urls.py
django.url path
. views
urlpatterns = [path("", viewns.Menulist.as_view(), name="menulist)]  ## connect url to view

go to urls.py in my site
path("", include(appdirectoryname.urls)  ## connect app url to project




context in django
def get_context_data(self):
context = {"meals":"pizza"}
return context

in html using jinja
{{meals}}

so context are dictionaries that html can access values from using keys in jinja